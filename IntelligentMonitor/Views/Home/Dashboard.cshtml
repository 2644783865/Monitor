<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Dashboard</title>
    <meta name="renderer" content="webkit">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=0">
    <link href="~/layuiadmin/layui/css/layui.css" rel="stylesheet" />
    <link href="~/layuiadmin/style/admin.css" rel="stylesheet" />
</head>
<body>
    <div class="layui-fluid">
        <div class="layui-card">
            <div class="layui-row layui-col-space15">
                <div class="layui-col-md12 layui-col-md12 layui-col-md12">
                    <div class="charts" id="charts" style="height:300px;"></div>
                </div>
            </div>
        </div>
        <div class="layui-card query">
            <div class="layui-form layui-form-pane layui-card-header layuiadmin-card-header-auto">
                <div class="layui-form-item">
                    <div class="layui-row">
                        <div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <label class="layui-form-label">Group</label>
                            <div class="layui-input-inline">
                                <select name="group" class="group"></select>
                            </div>
                        </div>
                        <div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <label class="layui-form-label">Host</label>
                            <div class="layui-input-inline">
                                <select name="host" class="host"></select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="layui-form-item">
                    <div class="layui-row">
                        <div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <label class="layui-form-label">Application</label>
                            <div class="layui-input-inline">
                                <select name="application" class="application"></select>
                            </div>
                        </div>
                        <div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <label class="layui-form-label">Item</label>
                            <div class="layui-input-inline">
                                <select name="item" class="item"></select>
                            </div>
                        </div>
                        <div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <div class="layui-input-inline layui-hide">
                                <button class="layui-btn layui-btn-danger layui-btn-fluid btnRemoveQuery">
                                    Remove Query
                                </button>
                            </div>
                            <div class="layui-input-inline">
                                <button class="layui-btn layui-btn-fluid btnQuery">
                                    Add Query
                                </button>
                            </div>
                            <div class="layui-input-inline">
                                <button class="layui-btn layui-btn-fluid" lay-submit="" lay-filter="save">Save</button>
                            </div>
                        </div>
                        @*<div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <div class="layui-input-inline">
                                <button class="layui-btn layui-btn-fluid" lay-submit="" lay-filter="save">Save</button>
                            </div>
                        </div>
                        <div class="layui-col-md4 layui-col-md4 layui-col-md4">
                            <div class="layui-inline">
                                <label class="layui-form-label">Date Range</label>
                                <div class="layui-input-inline">
                                    <input type="text" class="layui-input" id="range" placeholder=" - ">
                                </div>
                            </div>
                        </div>*@
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script src="~/js/jquery-2.1.1.min.js"></script>
    <script src="~/layuiadmin//layui/layui.js"></script>
    <script src="~/js/echarts.min.js"></script>
    <script>
        layui.use(['form', 'layer','laydate'], function () {
            var form = layui.form
                , layer = layui.layer
                , laydate = layui.laydate;

            $('.layui-form-item .layui-form-label').css("width", "auto");
            
            let itemName = [];
            let itemid = [];
            let loading = {};
            let theme = 'shine';
            let charts = echarts.init(document.getElementById("charts"));

            let queryhtml = $('.query>div').prop("outerHTML");

            renderCharts([], [], []);
            $.getJSON('/js/themes/' + theme + '.json', function (result) {
                echarts.registerTheme(theme, result.theme);
                loading = result.loading;
            });

            $.getJSON("/api/Zabbix/hostgroup", function (data) {
                var options = "<option value=\"\"></option>";
                for (var i = 0; i < data.result.length; i++) {
                    options += "<option value=\"" + data.result[i].groupid + "\">" + data.result[i].name + "</option>";
                }
                $('.group').html(options);
                form.render('select');
            });

            $(".query").delegate(".btnQuery", "click", function () {
                $('.query').append(queryhtml);
                var group = $(this.parentNode.parentNode.parentNode.parentNode.parentNode.parentNode.lastChild).find(".group");

                $.getJSON("/api/Zabbix/hostgroup", function (data) {
                    var options = "<option value=\"\"></option>";
                    for (var i = 0; i < data.result.length; i++) {
                        options += "<option value=\"" + data.result[i].groupid + "\">" + data.result[i].name + "</option>";
                    }
                    group.html(options);
                    form.render('select');
                });

                $(this).parent().parent().find("div:eq(0)").removeClass("layui-hide");
                $(this).parent().parent().find("div:gt(0)").remove();
            });

            function deleteArr(arr, idx) {
                var array = [];
                for (var i = 0; i < arr.length; i++) {
                    if (i != idx) {
                        array.push(arr[i]);
                    }
                }
                return array;
            }

            $(".query").delegate(".btnRemoveQuery", "click", function () {
                var idx = $(".btnRemoveQuery").index(this);
                $(this.parentNode.parentNode.parentNode.parentNode.parentNode).remove();

                itemName = deleteArr(itemName,idx);
                itemid = deleteArr(itemid, idx);

                getData(itemid, itemName);
            });

            //laydate.render({
            //    elem: '#range'
            //    , type: 'datetime'
            //    , range: true,
            //    done: function (value) {
            //        if (itemName == "" || !hasData) {
            //            return false
            //        }
            //        charts.showLoading(loading);
            //        var time = value.split(' - ');
            //        var time_from = time[0];
            //        var time_till = time[1];
            //        var url = "/api/Zabbix/history?itemids=" + itemid + "&time_from=" + time_from + "&time_till=" + time_till;
            //        getData(url);
            //    }
            //});

            form.on('select', function (data) {
                var elem = $(data.elem);
                var elemDad = elem.parent().parent().parent().parent().parent();
                var g = elem.hasClass("group");
                var h = elem.hasClass("host");
                var a = elem.hasClass("application");
                var i = elem.hasClass("item");
                if (g) {
                    $.getJSON("/api/Zabbix/host?groupids=" + data.value, function (data) {
                        var options = "<option value=\"\"></option>";
                        for (var i = 0; i < data.result.length; i++) {
                            options += "<option value=\"" + data.result[i].hostid + "\">" + data.result[i].name + "</option>";
                        }
                        elemDad.find('.host').html(options);
                        form.render('select');
                    });
                }
                if (h) {
                    $.getJSON("/api/Zabbix/application?hostids=" + data.value, function (data) {
                        var options = "<option value=\"\"></option>";
                        for (var i = 0; i < data.result.length; i++) {
                            options += "<option value=\"" + data.result[i].applicationid + "\">" + data.result[i].name + "</option>";
                        }
                        elemDad.find('.application').html(options);
                        form.render('select');
                    });
                }
                if (a) {
                    $.getJSON("/api/Zabbix/item?applicationids=" + data.value, function (data) {
                        var options = "<option value=\"\"></option>";
                        for (var i = 0; i < data.result.length; i++) {
                            var name = data.result[i].name;
                            if (name.indexOf('$') >= 0) {
                                var key = data.result[i].key_;
                                var keys = key.match(/\[(.+?)\]/g)[0].replace("[", "").replace("]", "").split(',');
                                for (var j = 0; j < keys.length; j++) {
                                    name = name.replace("$" + (j + 1), keys[j]);
                                }
                            }
                            options += "<option value=\"" + data.result[i].itemid + "\">" + name + "</option>";
                        }
                        elemDad.find('.item').html(options);
                        form.render('select');
                    });
                }
                if (i) {
                    itemName.push($(this).text());
                    itemid.push(data.value);

                    charts.showLoading(loading);

                    console.log(itemid)
                    console.log(itemName)

                    getData(itemid, itemName);
                }
            });

            form.on('submit(save)', function (data) {
                if (itemName.length > 0 && itemid.length > 0) {
                    layer.prompt({
                        title: '请输入此图表名称'
                        , formType: 0
                    }, function (chartsName, index) {
                        layer.close(index);
                        //var time = $('#range').val().split(' - ');
                        var time_from = "";
                        var time_till = "";
                        var charts = {};
                        charts.itemId = itemid.join(",");
                        charts.timeFrom = time_from;
                        charts.timeTill = time_till;
                        charts.itemName = itemName.join(",");
                        charts.chartsName = chartsName;

                        $.ajax({
                            type: "post",
                            url: "/api/Charts/add_charts",
                            contentType: "application/json; charset=utf-8",
                            dataType: "json",
                            data: JSON.stringify(charts),
                            success: function (result) {
                                if (result.code == 0) {
                                    layer.msg(result.msg, {
                                        icon: 1,
                                        time: 1000
                                    }, function () {
                                        window.location.reload();
                                    });
                                } else {
                                    layer.msg(result.msg, {
                                        icon: 5,
                                        time: 1000
                                    });
                                }
                            }
                        });
                    });
                } else {
                    layer.msg("无监控数据，不可保存");
                }
                return false;
            });

            function getData(itemid, itemName) {
                var url = "/api/Zabbix/history?";

                for (var i = 0; i < itemid.length; i++) {
                    url += "&itemids=" + itemid[i];
                }
                $.getJSON(url, function (data) {
                    var series_data = [];
                    var res = data.result;
                    
                    for (var i = 0; i < itemid.length; i++) {
                        var xAxis_data = [];
                        var value = [];

                        res.map(function (item) {
                            if (item.itemid == itemid[i]) {
                                value.push(item.value);
                                xAxis_data.push(format(item.clock));
                            }
                        })
                        var item = {
                            name: itemName[i],
                            type: 'line',
                            data: value
                        };
                        series_data.push(item);
                    }
                    
                    renderCharts(series_data, xAxis_data, itemName);
                });
            }

            function renderCharts(series_data, xAxis_data, itemName) {
                charts.clear();
                let option = {
                    tooltip: {
                        trigger: 'axis'
                    },
                    legend: {
                        data: itemName
                    },
                    grid: {
                        left: '3%',
                        right: '4%',
                        bottom: '3%',
                        containLabel: true
                    },
                    xAxis: {
                        type: 'category',
                        boundaryGap: false,
                        data: xAxis_data
                    },
                    yAxis: {
                        type: 'value'
                    },
                    series: series_data
                };

                charts.setOption(option);
                charts.hideLoading();
            }

            function format(unix) {
                var now = new Date();
                var time = new Date(unix * 1000);
                //var y = time.getFullYear();
                var m = time.getMonth() + 1;
                m = m < 10 ? '0' + m : m;
                var d = time.getDate();
                d = d < 10 ? '0' + d : d;
                var h = time.getHours();
                h = h < 10 ? '0' + h : h;
                var mm = time.getMinutes();
                mm = mm < 10 ? '0' + mm : mm;
                //var s = time.getSeconds();
                var now_m = now.getMonth() + 1;
                now_m = now_m < 10 ? '0' + now_m : now_m;
                var now_d = now.getDate();
                now_d = now_d < 10 ? '' + now_d : now_d;
                if (m == now_m && d == now_d) {
                    return h + ':' + mm;
                }
                return m + '/' + d + ' ' + h + ':' + mm;
            }

            window.addEventListener("resize", function () {
                charts.resize();
            });
        });
    </script>
</body>
</html>